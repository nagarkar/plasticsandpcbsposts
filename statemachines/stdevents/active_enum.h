//****************************************************************************
// Model: StdEvents.qm
// File:  stdevents/active_enum.h
//
// This code has been generated by QM tool (see state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//****************************************************************************
//${stdevents::active_enum.h} ................................................
// Thanks to http://saltares.com/blog/computing/smart-enums-in-c-or-what-is-this-madness/

#ifndef ACTIVE_ENUM_H
#define ACTIVE_ENUM_H

#ifdef __cplusplus
extern "C" {
#endif

#include <cstring>

#define SMARTENUM_VALUE(typeName, value) value,
#define SMARTENUM_STRING(typeName, value) #value,

#define SMARTENUM_DEFINE_ENUM(typeName, values) enum typeName { values(SMARTENUM_VALUE) e##typeName##_Count, };

#define SMARTENUM_DECLARE_NAMES(typeName, values) extern const char* typeName##Array [e##typeName##_Count];

#define SMARTENUM_DEFINE_NAMES(typeName, values) const char* typeName##Array [e##typeName##_Count] = { values(SMARTENUM_STRING) };

#define SMARTENUM_DECLARE_GET_VALUE_FROM_STRING(typeName, name)    typeName get##typeName##FromString(const char* str);

#define SMARTENUM_DEFINE_GET_VALUE_FROM_STRING(typeName, name)    \
    typeName get##typeName##FromString(const char* str)                     \
    {                                                                                                      \
        for (int i = 0; i < e##typeName##_Count; ++i)                       \
        if (!strcmp(typeName##Array[i], str))                                            \
            return (typeName)i;                                                                        \
        return e##typeName##_Count;                                                                    \
    }

#define getStringFromEnumValue(typeName, value) typeName##Array[##value]
#define getEnumValueFromString(typeName, name)    get##typeName##FromString(##name)


#ifdef __cplusplus
}
#endif

#endif /* SMARTENUM_H_ */

